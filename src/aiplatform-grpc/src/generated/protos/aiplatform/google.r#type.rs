// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct LatLng {
    #[prost(double, tag = "1")]
    pub latitude: f64,
    #[prost(double, tag = "2")]
    pub longitude: f64,
}
impl ::prost::Name for LatLng {
    const NAME: &'static str = "LatLng";
    const PACKAGE: &'static str = "google.type";
    fn full_name() -> ::prost::alloc::string::String {
        "google.type.LatLng".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "type.googleapis.com/google.type.LatLng".into()
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Date {
    #[prost(int32, tag = "1")]
    pub year: i32,
    #[prost(int32, tag = "2")]
    pub month: i32,
    #[prost(int32, tag = "3")]
    pub day: i32,
}
impl ::prost::Name for Date {
    const NAME: &'static str = "Date";
    const PACKAGE: &'static str = "google.type";
    fn full_name() -> ::prost::alloc::string::String {
        "google.type.Date".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "type.googleapis.com/google.type.Date".into()
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Money {
    #[prost(string, tag = "1")]
    pub currency_code: ::prost::alloc::string::String,
    #[prost(int64, tag = "2")]
    pub units: i64,
    #[prost(int32, tag = "3")]
    pub nanos: i32,
}
impl ::prost::Name for Money {
    const NAME: &'static str = "Money";
    const PACKAGE: &'static str = "google.type";
    fn full_name() -> ::prost::alloc::string::String {
        "google.type.Money".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "type.googleapis.com/google.type.Money".into()
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Interval {
    #[prost(message, optional, tag = "1")]
    pub start_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "2")]
    pub end_time: ::core::option::Option<::prost_types::Timestamp>,
}
impl ::prost::Name for Interval {
    const NAME: &'static str = "Interval";
    const PACKAGE: &'static str = "google.type";
    fn full_name() -> ::prost::alloc::string::String {
        "google.type.Interval".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "type.googleapis.com/google.type.Interval".into()
    }
}
